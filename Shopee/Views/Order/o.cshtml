@model Shopee.Models.Order
@{
    ViewData["Title"] = "Manage Order";
    var Payments = new string[] { "Credit Card", "Debit Card", "Net Banking", "UPI", "Cash On Delivery" };
    var PaymentsLba = new string[] { "Card Number", "Card Number", "Bank", "URI", "" };
    var PaymentsLbb = new string[] { "Expiry", "Expiry", "Account", "@", "" };
}
@section Styles{
<style>
    .section-legend {
        position: relative;
        top: -23px;
        font-size: 1.2rem;
        opacity: 1;
        color: var(--bs-blue);
        margin-bottom: -13px;
        opacity: 1;
    }
</style>
}
<div class="row ustify-content-between my-3 py-2">
    <div class="col-sm-12 col-md-12 col-lg-12 col-xl-10 mx-auto">
        <div name="details-buttons" class="row flex-row justify-content-left px-2">
            <div class="col-auto px-0 me-1">
                <a class="btn btn-primary cb" data-bs-toggle="collapse" href="#d-order" role="button">Order</a>
            </div>
            <div class="col-auto px-0 me-1">
                <a class="btn btn-primary cb" data-bs-toggle="collapse" href="#d-customer" role="button">Customer</a>
            </div>
            <div class="col-auto px-0 me-1">
                <a class="btn btn-primary cb" data-bs-toggle="collapse" href="#d-payment" role="button">Payment</a>
            </div>
            <div class=" col-auto px-0 me-1">
                <a class="btn btn-primary cb" data-bs-toggle="collapse" href="#d-items" role="button">Items</a>
            </div>
            <div class=" col-auto px-0 me-1">
                <a class="btn btn-primary cb" data-bs-toggle="collapse" href="#d-remarks" role="button">Remarks</a>
            </div>
        </div>
        <div name=" details-details-divs" class=" row flex-row justify-content-left py-2">
            <div class="collapse show px-0" id="d-order">
                <div class="card card-body">
                    <table class="table table-borderd m-0">
                        <tr>
                            <td>Order Id</td>
                            <td>@Model.Id</td>
                        </tr>
                        <tr>
                            <td>Order Amount</td>
                            <td>@Model.Amount</td>
                        </tr>
                        <tr>
                            <td>Order Amount</td>
                            <td>@Model.Tax</td>
                        </tr>
                        <tr>
                            <td>Order Status</td>
                            <td>@Model.Status</td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="collapse px-0" id="d-customer">
                <div class="card card-body">
                    <table class="table table-borderd m-0">
                        <tr>
                            <td>Name</td>
                            <td>@($"{Model.OrderByUser.FirstName} {Model.OrderByUser.LastName}")</td>
                        </tr>
                        <tr>
                            <td>Address</td>
                            <td>@Model.Address</td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="collapse px-0" id="d-payment">
                <div class="card card-body">
                    <table class="table table-borderd m-0">
                        <tr>
                            <td>Amount</td>
                            <td>@Model.Amount</td>
                        </tr>
                        <tr>
                            <td>Tax</td>
                            <td>@Model.Tax</td>
                        </tr>
                        <tr>
                            <td>Payment Type</td>
                            <td>@(Payments[(int)Model.Payment])</td>
                        </tr>
                        <tr>
                            <td>@(PaymentsLba[(int)Model.Payment])</td>
                            <td>@Model.pda</td>
                        </tr>
                        <tr>
                            <td>@(PaymentsLbb[(int)Model.Payment])</td>
                            <td>@Model.pdb</td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="collapse px-0" id="d-items">
                <div class="card card-body">
                    <table class="table table-borderd m-0">
                        <tr>
                            <td>Sr#</td>
                            <td>Item</td>
                            <td>Avaibility</td>
                            <td>Quantity</td>
                        </tr>

                        @foreach (OrderItem item in Model.Items)
                        {
                            <tr>
                                <td>@Model.Items.IndexOf(item) + 1</td>
                                <td>@item.Product.Title</td>
                                <td>@item.Product.StoreQty</td>
                                <td>@item.Quantity</td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
            <div class="collapse px-0" id="d-remarks">
                <div class="card card-body">
                    <table class="table table-borderd m-0">
                        <tr>
                            <td>By</td>
                            <td>Time</td>
                            <td>Remark</td>
                        </tr>
                        @foreach (Remarks rm in Model.Remarks)
                        {
                            <tr>
                                <td>@rm.ByUser.FirstName</td>
                                <td>@rm.TimeStamp</td>
                                <td>@rm.Text</td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
        <div name=" order-actions" class="row flex-row justify-content-left px-2">
            <div class="col-auto">
                <div class="row flex-grow-0">
                    <div class="col-auto px-0 me-1 my-2">
                        <button id="btn-accept" type="submit" class="btn btn-success" style="width: 105px;" role="button" disabled="@(Model.Status != OrderStatus.Pending)" data-id="@Model.Id">
                            <div class="load d-none">
                                <span class="spinner-border spinner-border-sm pe-none" role="status" aria-hidden="true"></span>
                                <span class="pe-none">Saving...</span>
                            </div>
                            <div class="n-load pe-none">
                                <span class="pe-none">Accept</span>
                            </div>
                        </button>
                    </div>
                    <div class="col-auto px-0 me-1 my-2">
                        <button id="btn-reject" type="submit" class="btn btn-danger" style="width: 105px;" role="button" disabled="@(Model.Status != OrderStatus.Pending)" data-id="@Model.Id">
                            <div class="load d-none">
                                <span class="spinner-border spinner-border-sm pe-none" role="status" aria-hidden="true"></span>
                                <span class="pe-none">Saving...</span>
                            </div>
                            <div class="n-load pe-none">
                                <span class="pe-none">Reject</span>
                            </div>
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-auto">
                <form class="row" method="post" asp-action="Update" asp-route-id="@Model.Id">
                    <div class="col-auto px-0 me-1 my-2">
                        @Html.DropDownList("orderstatus", new SelectList(Enum.GetValues(typeof(OrderStatus)).Cast<OrderStatus>(), Model.Status),htmlAttributes:new{@class="form-select"})
                    </div>
                    <div class="col-auto px-0 me-1 my-2">
                        @Html.DropDownList("shipping", new SelectList(Enum.GetValues(typeof(ShippingType)).Cast<ShippingType>(),selectedValue: (Model.Shipping?.ShippingType ?? ShippingType.IndiaPost)),htmlAttributes:new{@class="form-select"})
                    </div>
                    <div class="col-auto px-0 me-1 my-2">
                        <input class="form-control" type="text" id="docket" name="docket" placeholder="#Docket" autocomplete="off" "@(Model.Status == OrderStatus.Pending ? "disabled" : "")"></input>
                    </div>
                    <div class="col-auto px-0 me-1 my-2">
                        <input class="form-control" type="text" id="remark" name="remark" placeholder="Remark" autocomplete="off" "@(Model.Status == OrderStatus.Cancelled ? "disabled" : "")"></input>
                    </div>
                    <div class="col-auto px-0 me-1 my-2">
                        <button id="submit" type="submit" class="btn btn-primary" role="button" "@(Model.Status == @OrderStatus.Cancelled ? "disabled" : "")">Update</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts{
<script type="text/javascript">
    $('.cb').on('click', function () { $('.collapse').collapse('hide'); });

    $('#btn-accept').on('click', (e) => {
        e.preventDefault();
        let orderId = $(e.target).data('id');
        $(e.target).find('div.load').toggleClass('d-none');
        $(e.target).find('div.n-load').toggleClass('d-none');

        $.ajax({
            url: '@Url.Action("accept")' + '/' + orderId,
            success: (data) => {
                $(e.target).find('div.load').toggleClass('d-none');
                $(e.target).find('div.n-load').toggleClass('d-none');
                if (data.success) {
                    $(`.btn[data-id="${orderId}"]`).prop('disabled', true);
                } else {
                    var message = data.message;
                    if (data.message == 'NO-CONTINUE') {
                        message = document.createElement('div');
                        $(message).append('<p>Order can not continue. Following items are not available in store</p>');
                        itemTable = document.createElement('table');
                        itemTable.classList.add('table','text-left','border');
                        $(itemTable).append('<tr><th class="border text-left">Item</th><th class="border">Order</th><th class="border">Available</th></tr>');
                        data.data.forEach(item => {
                            $(itemTable).append(`<tr>
                                    <td class="border text-left">${item.title}</td>
                                    <td class="border">${item.order}</td>
                                    <td class="border">${item.available}</td>
                                </tr>`);
                        });
                        $(message).append(itemTable);
                    }
                    showMessage(message, 'ERROR');
                }
            },
            error: (err) => {
                console.log('error', err);
            }
        })

    });

    $('#btn-reject').on('click', (e) => {
        e.preventDefault();
        let orderId = $(e.target).data('id');
        $(e.target).find('div.load').toggleClass('d-none');
        $(e.target).find('div.n-load').toggleClass('d-none');

        $.ajax({
            url: '@Url.Action("reject")' + '/' + orderId,
            success: (data) => {
                $(e.target).find('div.load').toggleClass('d-none');
                $(e.target).find('div.n-load').toggleClass('d-none');
                if (data.success) {
                    $(`.btn[data-id="${orderId}"]`).prop('disabled', true);
                } else {                  
                    showMessage(message, 'ERROR');
                }
            },
            error: (err) => {
                console.log('error', err);
            }
        })
    });
</script>
}